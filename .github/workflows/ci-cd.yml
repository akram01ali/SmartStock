name: CI Pipeline

on:
  push:
    branches: 
      - production

jobs:
  # Do testing
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20


      - name: overall Lint & Test
        run: |
          echo Overall testing not yet implemented

      # Backend job (only if backend changed)
      - name: Backend Lint & Test
        if: ${{ contains(github.event.head_commit.modified, 'server/') || contains(github.event.head_commit.added, 'server/') || contains(github.event.head_commit.removed, 'server/') }}
        run: |
          echo Testing for "backend/" not yet implemented

      # Admin Dashboard job (only if changed)
      - name: Admin Dashboard Lint & Test
        if: ${{ contains(github.event.head_commit.modified, 'apps/admin-dashboard/') || contains(github.event.head_commit.added, 'apps/admin-dashboard/') || contains(github.event.head_commit.removed, 'apps/admin-dashboard/') }}
        run: |
          npm install --prefix apps/admin-dashboard
          echo Testing for "apps/admin-dashboard/" not yet implemented
          
      # Mobile job (only if changed)
      - name: Mobile Lint & Test
        if: ${{ contains(github.event.head_commit.modified, 'apps/smartstock-mobile/') || contains(github.event.head_commit.added, 'apps/smartstock-mobile/') || contains(github.event.head_commit.removed, 'apps/smartstock-mobile/') }}
        run: |
          npm install --prefix apps/smartstock-mobile
          echo Testing for "apps/smartstock-mobile/ " not yet implemented


  # Job 2: Build and Deploy ALL Containers
  build:
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Build and Push Backend Docker Image (Python)
      - name: Build and Push Backend Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/smartstock_backend:latest
          
      # Build and Push Admin Dashboard Docker Image (Node.js)
      - name: Build and Push Admin Dashboard Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./apps/admin-dashboard
          file: ./apps/admin-dashboard/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/smartstock_admin_dashboard:latest
          build-args: |
            VITE_API_URL=${{ vars.RPI_API_URL }}

  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Pull images
        run: |
          echo Pulling latest images from Docker Hub...
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/smartstock_backend:latest
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/smartstock_admin_dashboard:latest
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/smartstock_mobile:latest


      - name: Deploy All on Raspberry Pi
        run: |
          echo Starting deployment to Raspberry Pi...

          cd ~/SmartStock

          echo Restarting Containers...
          docker compose down
          docker compose up -d --force-recreate
      
      - name: Cleanup Old Images
        run: |
          echo "Cleaning up old Docker images..."
          docker image prune -f
          echo "Cleanup complete!"

